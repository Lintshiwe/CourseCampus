
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Admin-only collections that require authentication
    match /feedback/{feedbackId} { allow read, write: if request.auth != null; }
    match /bug-reports/{bugId} { allow read, write: if request.auth != null; }
    match /social-links/{linkId} { allow read, write: if request.auth != null; }

    // Materials have more complex rules
    match /materials/{materialId} {
      // Public can read materials that are marked as accessible
      allow read: if resource.data.isAccessible == true;
      
      // Admins (authed users) can create and delete materials
      allow create, delete: if request.auth != null;
      
      // Update logic:
      allow update: if 
        // 1. Admins can update any field
        request.auth != null 
        // 2. OR, the public can increment the download count (and only that field)
        || (
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['downloads']) && 
          request.resource.data.downloads == resource.data.downloads + 1
        )
        // 3. OR, the public can increment the helpfulness count (and only that field)
        || (
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['helpful']) && 
          request.resource.data.helpful == resource.data.helpful + 1
        );
    }
    
    // Analytics collection rules
    match /analytics/siteStats {
      // Admins can read the total stats
      allow read: if request.auth != null;
      // Anyone can increment the total visit count (and only that field)
      allow write: if request.resource.data.visits == resource.data.visits + 1 &&
                     request.resource.data.diff(resource.data).affectedKeys().hasOnly(['visits']);
      
      // Daily visit sub-collection
      match /dailyVisits/{day} {
        // Admins can read daily stats
        allow read: if request.auth != null;
        // Anyone can increment the daily visit count (and only that field)
        allow write: if request.resource.data.visits == resource.data.visits + 1 &&
                       request.resource.data.diff(resource.data).affectedKeys().hasOnly(['visits']);
      }
    }
  }
}
